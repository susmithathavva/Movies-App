package pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.FindBy;
import java.time.Duration;
import java.util.List;
public class loginpage {
    @FindBy(className = "login-website-logo")
    WebElement loginAppLogoElement;
    @FindBy(className = "sign-in-heading")
    WebElement loginheading;
    @FindBy(className = "input-label")
    List<WebElement> usernameheading;
    @FindBy(className = "login-button")
    WebElement loginbuttonheading;
    @FindBy(id="usernameInput")
     WebElement usernames;
    @FindBy(className ="error-message")
     WebElement errormessage;
    @FindBy(id="passwordInput")
     WebElement passwords;


    WebDriver driver;
    WebDriverWait wait;

    public loginpage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
        this.wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    public WebElement findLoginAppLogoElement() {
        return loginAppLogoElement;
    }

    public WebElement findloginheading() {
        return loginheading;
    }

    public String getfindusernameheading(int index) {
        return usernameheading.get(index).getText();
    }

    public void getfindLoginbutton() {
         loginbuttonheading.click();
    }
    public void usernameinput(String username){
        usernames.sendKeys(username);
    }
    public void passwordinput(String password){
        passwords.sendKeys(password);

    }
    public String geterrormessage(){
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("error-message")));
        return errormessage.getText();
    }
    public void loginToApplication(String username, String password){
        usernameinput(username);
        passwordinput(password);
        getfindLoginbutton();
    }
}
