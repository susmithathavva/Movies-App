import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.Test;
import pages.loginpage;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeMethod;

import java.time.Duration;

public class loginpageTest {
    loginpage loginpage;
    WebDriver driver;
    @BeforeMethod
    public void setup() {
        System.setProperty("webdriver.chrome.driver","C:\\Users\\HP\\AppData\\Local\\Temp\\db1d160d-9511-41be-a6e5-bc155777136c_chromedriver-win32 (3).zip.36c\\chromedriver-win32\\chromedriver.exe");
         driver=new ChromeDriver();
         driver.get("https://qamoviesapp.ccbp.tech");
         loginpage=new loginpage(driver);
    }
   // @AfterMethod
    //public void teardown(){
      //  driver.close();
    //}
@Test
    public void TestloginUI(){
    Assert.assertTrue(loginpage.findLoginAppLogoElement().isDisplayed());

    Assert.assertEquals(loginpage.findloginheading().getText(),"Login");

   // Assert.assertEquals(loginpage.findUsernameheading().getText(),"USERNAME");

    Assert.assertEquals(loginpage.getfindusernameheading(0), "USERNAME", "Username label text does not match");
    Assert.assertEquals(loginpage.getfindusernameheading(1), "PASSWORD", "Password label text does not match");
}
@Test(priority = 1)
    public void TestloginWithEmptyinput(){
        loginpage.getfindLoginbutton();
    String actualmsg=loginpage.geterrormessage();
        Assert.assertEquals(actualmsg,"*Username or password is invalid");
}
@Test(priority =2 )
public void TestloginWithEmptyusername() {
        loginpage.loginToApplication("","rahul@2021");
    String actualmsg=loginpage.geterrormessage();
    Assert.assertEquals(actualmsg,"*Username or password is invalid");
}
@Test(priority =3 )
public void TestloginWithEmptypassword(){
        loginpage.loginToApplication("rahul","");
    String actualmsg=loginpage.geterrormessage();
    Assert.assertEquals(actualmsg,"*Username or password is invalid");

    }
    @Test(priority =4 )
    public void TestloginWithcorrectusernamewrongpassword(){
        loginpage.loginToApplication("rahul","rahul@202");
        String actualmsg=loginpage.geterrormessage();
        Assert.assertEquals(actualmsg,"*username and password didn't match");
    }
    @Test(priority =5 )
    public void TestloginWithvalidcredentials(){
        loginpage.loginToApplication("rahul","rahul@2021");
        String Expectedurl="https://qamoviesapp.ccbp.tech/";
        String actualurl=driver.getCurrentUrl();
        WebDriverWait wait=new WebDriverWait(driver, Duration.ofSeconds(5));
        wait.until(ExpectedConditions.urlToBe(Expectedurl));
    }

}
